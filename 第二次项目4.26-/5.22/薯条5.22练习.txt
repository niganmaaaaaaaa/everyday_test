/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    vector<TreeNode*> a;
    int type=0;
    void search(TreeNode* curr, TreeNode* p, TreeNode* q){
        if(curr==NULL||type==2){
            return;
        }
        if(type==0)
        a.push_back(curr);
        if(curr==p||curr==q){
            if(type==1){//寻找第二个结点
                type=2;
            }
            if(type==0){//寻找第一个结点
                type=1;
            }
        }
        search(curr->left,p,q);
        search(curr->right,p,q);
        if(type!=2&&curr==a[a.size()-1])
        a.pop_back();
    }
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        search(root,p,q);
        return a[a.size()-1];
    }
};